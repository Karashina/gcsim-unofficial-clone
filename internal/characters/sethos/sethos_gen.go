// Code generated by "pipeline"; DO NOT EDIT.
package sethos

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	0: {"travel"},
	1: {"travel"},
	2: {"travel"},
	3: {"travel"},
	7: {"hold", "travel", "weakspot"},
	8: {"hold", "travel", "weakspot"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Sethos, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][][]float64{
		{attack_1},
		attack_2,
		{attack_3},
	}
)

var (
	// attack: aim = [4]
	aim = []float64{
		0.439,
		0.474559,
		0.510557,
		0.561481,
		0.59704,
		0.637867,
		0.694059,
		0.750251,
		0.806443,
		0.867903,
		0.928924,
		0.990384,
		1.051405,
		1.051405,
		1.051405,
	}
	// attack: attack_1 = [0]
	attack_1 = []float64{
		0.526,
		0.568606,
		0.611738,
		0.672754,
		0.71536,
		0.764278,
		0.831606,
		0.898934,
		0.966262,
		1.039902,
		1.113016,
		1.186656,
		1.25977,
		1.25977,
		1.25977,
	}
	// attack: attack_2 = [1 2]
	attack_2 = [][]float64{
		{
			0.238,
			0.257278,
			0.276794,
			0.304402,
			0.32368,
			0.345814,
			0.376278,
			0.406742,
			0.437206,
			0.470526,
			0.503608,
			0.536928,
			0.57001,
			0.57001,
			0.57001,
		},
		{
			0.266,
			0.287546,
			0.309358,
			0.340214,
			0.36176,
			0.386498,
			0.420546,
			0.454594,
			0.488642,
			0.525882,
			0.562856,
			0.600096,
			0.63707,
			0.63707,
			0.63707,
		},
	}
	// attack: attack_3 = [3]
	attack_3 = []float64{
		0.74,
		0.79994,
		0.86062,
		0.94646,
		1.0064,
		1.07522,
		1.16994,
		1.26466,
		1.35938,
		1.46298,
		1.56584,
		1.66944,
		1.7723,
		1.7723,
		1.7723,
	}
	// attack: clusterbloom = [7]
	shadowpiercing = []float64{
		1.4,
		1.505,
		1.61,
		1.75,
		1.855,
		1.96,
		2.1,
		2.24,
		2.38,
		2.52,
		2.66,
		2.8,
		2.975,
		2.975,
		2.975,
	}
	// attack: clusterbloom = [8]
	shadowpiercingem = []float64{
		1.346,
		1.44695,
		1.5479,
		1.6825,
		1.78345,
		1.8844,
		2.019,
		2.1536,
		2.2882,
		2.4228,
		2.5574,
		2.692,
		2.86025,
		2.86025,
		2.86025,
	}
	// attack: fullaim = [6]
	fullaim = []float64{
		1.24,
		1.333,
		1.426,
		1.55,
		1.643,
		1.736,
		1.86,
		1.984,
		2.108,
		2.232,
		2.356,
		2.48,
		2.635,
		2.635,
		2.635,
	}
	// skill: skill = [0]
	skill = []float64{
		1.156,
		1.2427,
		1.3294,
		1.445,
		1.5317,
		1.6184,
		1.734,
		1.8496,
		1.9652,
		2.0808,
		2.1964,
		2.312,
		2.4565,
		2.4565,
		2.4565,
	}
	// burst: burst = [0]
	burst = []float64{
		1.962,
		2.10915,
		2.2563,
		2.4525,
		2.59965,
		2.7468,
		2.943,
		3.1392,
		3.3354,
		3.5316,
		3.7278,
		3.924,
		4.16925,
		4.16925,
		4.16925,
	}
)
