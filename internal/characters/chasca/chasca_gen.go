// Code generated by "pipeline"; DO NOT EDIT.
package chasca

import (
	_ "embed"

	"fmt"
	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
	"slices"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	3: {"travel"},
	7: {"travel"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Chasca, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][][]float64{
		{attack_1},
		{attack_2},
		attack_3,
		{attack_4},
	}
)

var (
	// attack: attack_1 = [0]
	attack_1 = []float64{
		0.44634,
		0.48267,
		0.519,
		0.5709,
		0.60723,
		0.64875,
		0.70584,
		0.76293,
		0.82002,
		0.8823,
		0.94458,
		1.00686,
		1.06914,
		1.13142,
		1.1937,
	}
	// attack: attack_2 = [1]
	attack_2 = []float64{
		0.41968,
		0.45384,
		0.488,
		0.5368,
		0.57096,
		0.61,
		0.66368,
		0.71736,
		0.77104,
		0.8296,
		0.88816,
		0.94672,
		1.00528,
		1.06384,
		1.1224,
	}
	// attack: attack_3 = [2 2]
	attack_3 = [][]float64{
		{
			0.26445,
			0.285975,
			0.3075,
			0.33825,
			0.359775,
			0.384375,
			0.4182,
			0.452025,
			0.48585,
			0.52275,
			0.55965,
			0.59655,
			0.63345,
			0.67035,
			0.70725,
		},
		{
			0.26445,
			0.285975,
			0.3075,
			0.33825,
			0.359775,
			0.384375,
			0.4182,
			0.452025,
			0.48585,
			0.52275,
			0.55965,
			0.59655,
			0.63345,
			0.67035,
			0.70725,
		},
	}
	// attack: attack_4 = [3]
	attack_4 = []float64{
		0.68628,
		0.74214,
		0.798,
		0.8778,
		0.93366,
		0.9975,
		1.08528,
		1.17306,
		1.26084,
		1.3566,
		1.45236,
		1.54812,
		1.64388,
		1.73964,
		1.8354,
	}
	// attack: fullaim = [4]
	fullaim = []float64{
		1.24,
		1.333,
		1.426,
		1.55,
		1.643,
		1.736,
		1.86,
		1.984,
		2.108,
		2.232,
		2.356,
		2.48,
		2.635,
		2.79,
		2.945,
	}
	// skill: bite = [0]
	bite = []float64{
		0.0868,
		0.09331,
		0.09982,
		0.1085,
		0.11501,
		0.12152,
		0.1302,
		0.13888,
		0.14756,
		0.15624,
		0.16492,
		0.1736,
		0.18445,
		0.1953,
		0.20615,
	}
	// skill: momentumBonus = [1]
	momentumBonus = []float64{
		0.0434,
		0.046655,
		0.04991,
		0.05425,
		0.057505,
		0.06076,
		0.0651,
		0.06944,
		0.07378,
		0.07812,
		0.08246,
		0.0868,
		0.092225,
		0.09765,
		0.103075,
	}
	// skill: surgingBite = [2]
	surgingBite = []float64{
		0.217,
		0.233275,
		0.24955,
		0.27125,
		0.287525,
		0.3038,
		0.3255,
		0.3472,
		0.3689,
		0.3906,
		0.4123,
		0.434,
		0.461125,
		0.48825,
		0.515375,
	}
	// burst: burst = [0]
	burst = []float64{
		0.584392,
		0.628221,
		0.672051,
		0.73049,
		0.774319,
		0.818149,
		0.876588,
		0.935027,
		0.993466,
		1.051906,
		1.110345,
		1.168784,
		1.241833,
		1.314882,
		1.387931,
	}
)
