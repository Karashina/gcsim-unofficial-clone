// Code generated by "pipeline"; DO NOT EDIT.
package mualani

import (
	_ "embed"

	"fmt"
	"slices"

	"github.com/genshinsim/gcsim/pkg/core/action"
	"github.com/genshinsim/gcsim/pkg/core/keys"
	"github.com/genshinsim/gcsim/pkg/gcs/validation"
	"github.com/genshinsim/gcsim/pkg/model"
	"google.golang.org/protobuf/encoding/prototext"
)

//go:embed data_gen.textproto
var pbData []byte
var base *model.AvatarData
var paramKeysValidation = map[action.Action][]string{
	3: {"travel"},
}

func init() {
	base = &model.AvatarData{}
	err := prototext.Unmarshal(pbData, base)
	if err != nil {
		panic(err)
	}
	validation.RegisterCharParamValidationFunc(keys.Mualani, ValidateParamKeys)
}

func ValidateParamKeys(a action.Action, keys []string) error {
	valid, ok := paramKeysValidation[a]
	if !ok {
		return nil
	}
	for _, v := range keys {
		if !slices.Contains(valid, v) {
			return fmt.Errorf("key %v is invalid for action %v", v, a.String())
		}
	}
	return nil
}

func (x *char) Data() *model.AvatarData {
	return base
}

var (
	attack = [][]float64{
		attack_1,
		attack_2,
		attack_3,
	}
)

var (
	// attack: attack_1 = [0]
	attack_1 = []float64{
		0.514,
		0.55255,
		0.5911,
		0.6425,
		0.68105,
		0.7196,
		0.771,
		0.8224,
		0.8738,
		0.9252,
		0.9766,
		1.028,
		1.09225,
		1.09225,
		1.09225,
	}
	// attack: attack_2 = [1]
	attack_2 = []float64{
		0.446,
		0.47945,
		0.5129,
		0.5575,
		0.59095,
		0.6244,
		0.669,
		0.7136,
		0.7582,
		0.8028,
		0.8474,
		0.892,
		0.94775,
		0.94775,
		0.94775,
	}
	// attack: attack_3 = [2]
	attack_3 = []float64{
		0.7,
		0.7525,
		0.805,
		0.875,
		0.9275,
		0.98,
		1.05,
		1.12,
		1.19,
		1.26,
		1.33,
		1.4,
		1.4875,
		1.4875,
		1.4875,
	}
	// attack: charge = [3]
	charge = []float64{
		1.43,
		1.53725,
		1.6445,
		1.7875,
		1.89475,
		2.002,
		2.145,
		2.288,
		2.431,
		2.574,
		2.717,
		2.86,
		3.03875,
		3.03875,
		3.03875,
	}
	// skill: skillBase = [0]
	skillBase = []float64{
		0.0868,
		0.09331,
		0.09982,
		0.1085,
		0.11501,
		0.12152,
		0.1302,
		0.13888,
		0.14756,
		0.15624,
		0.16492,
		0.1736,
		0.18445,
		0.18445,
		0.18445,
	}
	// skill: skillWMBonus = [1]
	skillWMBonus = []float64{
		0.0434,
		0.046655,
		0.04991,
		0.05425,
		0.057505,
		0.06076,
		0.0651,
		0.06944,
		0.07378,
		0.07812,
		0.08246,
		0.0868,
		0.092225,
		0.092225,
		0.092225,
	}
	// skill: skillSSBBonus = [2]
	skillSSBBonus = []float64{
		0.217,
		0.233275,
		0.24955,
		0.27125,
		0.287525,
		0.3038,
		0.3255,
		0.3472,
		0.3689,
		0.3906,
		0.4123,
		0.434,
		0.461125,
		0.461125,
		0.461125,
	}
	// burst: burst = [0]
	burst = []float64{
		0.584,
		0.6278,
		0.6716,
		0.73,
		0.7738,
		0.8176,
		0.876,
		0.9344,
		0.9928,
		1.0512,
		1.1096,
		1.168,
		1.241,
		1.241,
		1.241,
	}
)
